@page "/"
@using DataJuggler.Blazor.FileUpload

<h3>Sample 1 - Standard Input File Button</h3>

<div>
    <FileUpload CustomSuccessMessage="Your file uploaded successfully." OnChange="OnFileUploaded"
        ShowStatus="false"  PartialGuidLength="10" MaxFileSize="4194304" FilterByExtension="true"
        AllowedExtensions=".jpg;.png;" ShowResetButton="true" OnReset="OnReset" 
        CustomExtensionMessage="Only .jpg and .png files are allowed." AppendPartialGuid="true"                
        FileTooLargeMessage="The file uploaded must be 4 megabytes or smaller.">
    </FileUpload>
</div>

<div class="height48"></div>

<h3>Sample 2 - Default Custom Button</h3>

<div class="customupload">
    <FileUpload CustomSuccessMessage="Your file uploaded successfully." OnChange="OnFileUploaded"
        ShowStatus="false"  PartialGuidLength="10" MaxFileSize="4194304" FilterByExtension="true" 
        ShowCustomButton="true" ButtonText="Select File" ButtonClassName="buttonwide"        
        AllowedExtensions=".jpg;.png;" ShowResetButton="true" OnReset="OnReset" 
        CustomExtensionMessage="Only .jpg and .png files are allowed." AppendPartialGuid="true"                
        FileTooLargeMessage="The file uploaded must be 4 megabytes or smaller.">
    </FileUpload>
</div>

@status


@code
{
    // test
    string status;
    bool showUploadButton = true;

    private void OnFileUploaded(UploadedFileInfo uploadedFileInfo)
    {
        // if aborted
        if (uploadedFileInfo.Aborted)
        {
            // get the status
            status = uploadedFileInfo.ErrorMessage;
        }
        else
        {
            // get the status
            status = "The file " + uploadedFileInfo.FullName + " was uploaded.";

            // showUploadButton is now false until the Reset button is clicked.
            showUploadButton = false;

            // other information about the file is available
            //DateTime lastModified = uploadedFileInfo.LastModified;
            //string nameAsItIsOnDisk = uploadedFileInfo.NameWithPartialGuid;
            //string partialGuid = uploadedFileInfo.PartialGuid;
            //long size = uploadedFileInfo.Size;
            //string type = uploadedFileInfo.Type;

            // The above information can be used to display, and / or process a file
        }
    }

    /// <summary>
    /// This method is used to get a notification from the FileUpload component after
    /// the Reset button is clicked.
    /// </summary>
    /// <param name="notUsedByRequiredArg"></param>
    private void OnReset(string notUsedByRequiredArg)
    {
        // erase status
        status = "";

        // toggle to true
        showUploadButton = true;

        // Refresh the UI
        StateHasChanged();
    }
}
