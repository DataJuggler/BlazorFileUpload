@page "/"
@using DataJuggler.Blazor.FileUpload

<h3>File Upload Test</h3>

<label class="custom-file-upload">
    <FileUpload CustomSuccessMessage="Your file uploaded successfully." OnChange="OnFileUploaded"
                PartialGuidLength="10" MaxFileSize="4194304" FilterByExtension="true" 
                AllowedExtensions=".jpg;.png;" ShowResetButton="true" OnReset="OnReset"
                CustomExtensionMessage="Only .jpg and .png files are allowed." AppendPartialGuid="true"                
                FileTooLargeMessage="The file uploaded must be 4 megabytes or smaller.">
    </FileUpload>
    @if (showUploadButton)
    {
        <span class="buttonwide height48"><span class="movedown8 fontverdana20">Choose File</span></span>
    }
</label>

@status


@code
{
    // test
    string status;
    bool showUploadButton = true;

    private void OnFileUploaded(UploadedFileInfo uploadedFileInfo)
    {
        // if aborted
        if (uploadedFileInfo.Aborted)
        {
            // get the status
            status = uploadedFileInfo.ErrorMessage;
        }
        else
        {
            // get the status
            status = "The file " + uploadedFileInfo.FullName + " was uploaded.";

            // showUploadButton is now false until the Reset button is clicked.
            showUploadButton = false;

            // other information about the file is available
            //DateTime lastModified = uploadedFileInfo.LastModified;
            //string nameAsItIsOnDisk = uploadedFileInfo.NameWithPartialGuid;
            //string partialGuid = uploadedFileInfo.PartialGuid;
            //long size = uploadedFileInfo.Size;
            //string type = uploadedFileInfo.Type;

            // The above information can be used to display, and / or process a file
        }
    }

    /// <summary>
    /// THis method is used to get a notification from the FileUpload component after
    /// the Reset button is clicked.
    /// </summary>
    /// <param name="notUsedByRequiredArg"></param>
    private void OnReset(string notUsedByRequiredArg)
    {
        // toggle to true
        showUploadButton = true;

        // Refresh the UI
        StateHasChanged();
    }
}
